version: 2.1
executors:
  docker-publisher:
    environment:
      IMAGE_NAME: pasit/ex-opencv-nodejs
    docker:
      - image: circleci/buildpack-deps:stretch
jobs:
  build-src:
    docker:
      - image: circleci/node:8
    working_directory: ~/repo
    steps:
      - checkout:
          path: ~/repo
      - restore_cache:
          keys:
            - dep-{{ checksum "yarn.lock" }}
      - run: yarn install --production --no-cache
      - save_cache:
          key: dep-{{ checksum "yarn.lock" }}
          paths:
            - node_modules
            - lib
      - run: yarn run build
      - persist_to_workspace:
          root: .
          paths:
            - .
  build-img:
    executor: docker-publisher
    working_directory: /tmp/workspace/repo
    steps:
      - checkout
      - setup_remote_docker
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Build Docker image
          command: |
            docker build -t $IMAGE_NAME:latest .
      - run:
          name: Archive Docker image
          command: docker save -o image.tar $IMAGE_NAME
      - persist_to_workspace:
          root: .
          paths:
            - ./image.tar
  publish-latest:
    executor: docker-publisher
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - setup_remote_docker
      - run:
          name: Load archived Docker image
          command: docker load -i /tmp/workspace/image.tar
      - run:
          name: Publish Docker Image to Docker Hub
          command: |
            echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin
            docker push $IMAGE_NAME:latest


workflows:
  version: 2
  build-master:
    jobs:
      - build-src:
          filters:
            branches:
              only: master
      - build-img:
          requires:
            - build-src
          filters:
            branches:
              only: master
      - publish-latest:
          requires:
            - build-img
          filters:
            branches:
              only: master